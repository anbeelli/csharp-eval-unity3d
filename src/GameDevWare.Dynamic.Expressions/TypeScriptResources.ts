/*
	Copyright (c) 2015 Denis Zykov

	This is part of Charon Game Data Editor Unity Plugin.

	Charon Game Data Editor Unity Plugin is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see http://www.gnu.org/licenses.
*/
//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated by a tool.
//
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// tslint:disable:max-line-length

export class ExpressionResources {
	public static readonly EXCEPTION_BIND_CALLMEMBERISNOTMETHOD: string = 'Unable to bind call because member \'{0}\' on type \'{1}\' is not method.';
	public static readonly EXCEPTION_BIND_CLOSEDDELEGATETYPEISEXPECTED: string = 'Invalid lambda type \'{0}\'. A closed delegate type is expected in lambda type declaration.';
	public static readonly EXCEPTION_BIND_FAILEDTOBIND: string = 'An error occured while trying to build \'{0}\' expression: {1}';
	public static readonly EXCEPTION_BIND_FAILEDTOBINDGENERICARGUMENTSTOTYPE: string = 'Failed to bind generic arguments \'{0}\' to type \'{1}\'.';
	public static readonly EXCEPTION_BIND_FAILEDTOBINDLISTINITIALIZERS: string = 'Failed to bind list initializer.';
	public static readonly EXCEPTION_BIND_FAILEDTOBINDMEMBERBINDINGS: string = 'Failed to bind member bindings.';
	public static readonly EXCEPTION_BIND_FAILEDTOBINDNEWEXPRESSION: string = 'Failed to bind \'new\' expression.';
	public static readonly EXCEPTION_BIND_INVALIDCHARLITERAL: string = 'Invalid char literal \'{0}\'. It should be one character length.';
	public static readonly EXCEPTION_BIND_INVALIDCONSTANTEXPRESSION: string = 'Can\'t convert constant of type \'{0}\' to literal representation.';
	public static readonly EXCEPTION_BIND_INVALIDLAMBDAARGUMENTS: string = 'Invalid argument types or count for lambda of type \'{0}\'.';
	public static readonly EXCEPTION_BIND_INVALIDLAMBDABODYTYPE: string = 'Failed to build lambda expression because body has type \'{0}\' which is not convertible to result type \'{1}.\'';
	public static readonly EXCEPTION_BIND_INVALIDLAMBDAPARAMETERTYPE: string = 'Invalid lambda parameter type \'{0}\' while \'{1}\' is expected.';
	public static readonly EXCEPTION_BIND_MEMBERISNOTMETHOD: string = 'Referenced member \'{0}\' on type \'{1}\' is not method.';
	public static readonly EXCEPTION_BIND_MISSINGATTRONNODE: string = 'Missing or wrong \'{0}\' attribute on one of expression nodes.';
	public static readonly EXCEPTION_BIND_MISSINGMETHOD: string = 'Type \'{0}\' is missing \'{1}\' method.';
	public static readonly EXCEPTION_BIND_MISSINGMETHODPARAMETER: string = 'Missing required method/indexer \'{0}\' parameter.';
	public static readonly EXCEPTION_BIND_MISSINGORWRONGARGUMENT: string = 'Missing or wrong \'{0}\' argument.';
	public static readonly EXCEPTION_BIND_RENDERFAILED: string = 'An error occured while trying to render \'{0}\' expression: {1}';
	public static readonly EXCEPTION_BIND_RESTRICTED_MEMBER_INVOCATION: string = 'Member \'{1}.{0}\' is not available until  type \'{1}\' is added as known type in \'{2}\'.';
	public static readonly EXCEPTION_BIND_TOOMANYARGUMENTS: string = 'Too many arguments. Maximum number of supported arguments \'{0}\'.';
	public static readonly EXCEPTION_BIND_UNABLEREMAPPARAMETERSCOUNTMISMATCH: string = 'Unable to remap expression\'s parameters with lamda syntax. Parameters count mismatch.';
	public static readonly EXCEPTION_BIND_UNABLETOAPPLYNULLCONDITIONALOPERATORONTYPEREF: string = 'Unable to apply null-conditional operator on type \'{0}\'.';
	public static readonly EXCEPTION_BIND_UNABLETOBINDCALL: string = 'Unable to find method \'{0}\' on type \'{1}\' accepting {2} arguments.';
	public static readonly EXCEPTION_BIND_UNABLETOBINDCONSTRUCTOR: string = 'Unable to find constructor on type \'{0}\' accepting specified arguments.';
	public static readonly EXCEPTION_BIND_UNABLETOBINDDELEG: string = 'Unable to invoke delegate {0}({1}) with specified arguments.';
	public static readonly EXCEPTION_BIND_UNABLETOBINDINDEXER: string = 'Unable to find indexing property on type \'{0}\' accepting specified arguments.';
	public static readonly EXCEPTION_BIND_UNABLETOBINDMEMBER: string = 'Unable to bind member \'{0}\' on type \'{1}\'. Static, visibility, generic parameters or call parameters doesn\'t not match.';
	public static readonly EXCEPTION_BIND_UNABLETOBINDMETHOD: string = 'Unable to bind parameters to method \'{0}\' on type \'{1}\'. Parameters doesn\'t match method. Parameters count \'{2}\'.';
	public static readonly EXCEPTION_BIND_UNABLETOCREATEEXPRWITHPARAMS: string = 'Unable to create \'{0}\' expression with these \'{1}\' parameters.';
	public static readonly EXCEPTION_BIND_UNABLETOINVOKENONDELEG: string = 'Unable to invoke non-delegate type \'{0}\'.';
	public static readonly EXCEPTION_BIND_UNABLETORESOLVEMEMBERONTYPE: string = 'Unable to find public member with name \'{0}\' on \'{1}\' type.';
	public static readonly EXCEPTION_BIND_UNABLETORESOLVEMETHODONTYPE: string = 'Unable to resolve method \'{0}\'.';
	public static readonly EXCEPTION_BIND_UNABLETORESOLVENAME: string = 'Unable to resolve \'{0}\'. There is no formal parameter with this name.';
	public static readonly EXCEPTION_BIND_UNABLETORESOLVETYPE: string = 'Unable to resolve type \'{0}\'.';
	public static readonly EXCEPTION_BIND_UNABLETORESOLVETYPEMULTIPLE: string = 'Unable to resolve type \'{0}\'. Can\'t choose from: \'{1}\'.';
	public static readonly EXCEPTION_BIND_UNKNOWNEXPRTYPE: string = 'Unknown expression type \'{0}\'.';
	public static readonly EXCEPTION_BIND_VALIDDELEGATETYPEISEXPECTED: string = 'Invalid lambda type \'{0}\'. A valid delegate type should be specified in lambda type declaration.';
	public static readonly EXCEPTION_BOUNDEXPR_ARGSDOESNTMATCHPARAMS: string = 'Count of passed arguments doesn\'t match parameters count.';
	public static readonly EXCEPTION_BOUNDEXPR_BODYRESULTDOESNTMATCHRESULTTYPE: string = 'Body\'s result type doesn\'t match expression\'s result type.';
	public static readonly EXCEPTION_BOUNDEXPR_CANTCONVERTARG: string = 'Can\'t convert argument \'{0}\' (\'{2}\') to required type \'{1}\'.';
	public static readonly EXCEPTION_BOUNDEXPR_WRONGNUMPARAMS: string = 'Wrong number of parameters. Make sure parameter count matches expression\'s signature.';
	public static readonly EXCEPTION_BOUNDEXPR_WRONGPARAMETERTYPE: string = 'One of parameters has invalid type. Make sure parameter types matches expression\'s signature.';
	public static readonly EXCEPTION_COMPIL_NOBINARYOPONTYPE: string = 'No binary operation \'{0}\' is defined on type \'{1}\'.';
	public static readonly EXCEPTION_COMPIL_NOCONVERTIONBETWEENTYPES: string = 'No conversion operation is defined from \'{0}\' to \'{1}\'.';
	public static readonly EXCEPTION_COMPIL_NOUNARYOPONTYPE: string = 'No unary operation \'{0}\' is defined on type \'{1}\'.';
	public static readonly EXCEPTION_COMPIL_ONLYFUNCLAMBDASISSUPPORTED: string = 'Only System.Func<> lambda types are supported.';
	public static readonly EXCEPTION_COMPIL_UNKNOWNBINARYEXPRTYPE: string = 'Unknown binary expression type \'{0}\'.';
	public static readonly EXCEPTION_COMPIL_UNKNOWNEXPRTYPE: string = 'Unknown expression type {0}.';
	public static readonly EXCEPTION_COMPIL_UNKNOWNUNARYEXPRTYPE: string = 'Unknown unary expression type \'{0}\'.';
	public static readonly EXCEPTION_EXECUTION_CANTDONULLVALUE: string = 'Can\'t \'{1}\' on a null value. Expression \'{0}\' gives null result.';
	public static readonly EXCEPTION_EXECUTION_EXPRESSIONGIVESNULLRESULT: string = 'Expression \'{0}\' gives null result.';
	public static readonly EXCEPTION_EXECUTION_INVALIDMEMBERFOREXPRESSION: string = 'Unknown member type \'{0}\' for MemberAccess expression.';
	public static readonly EXCEPTION_EXECUTION_MULTIPARAMETERINDEXERNOTSUPPORTED: string = 'Multi-parameter indexers are not supported.';
	public static readonly EXCEPTION_LIST_LISTISEMPTY: string = 'List is empty.';
	public static readonly EXCEPTION_PARSER_BINARYOPREQOPERAND: string = 'A binary operation requires two parameters.';
	public static readonly EXCEPTION_PARSER_COLONISEXPRECTED: string = 'A colon \':\' symbol is expected in conditional \'?\' expression.';
	public static readonly EXCEPTION_PARSER_EXPRESSIONISEMPTY: string = 'Expression is empty';
	public static readonly EXCEPTION_PARSER_INVALIDCHILDCOUNTOFNODE: string = 'An invalid children count \'{1}\' of node \'{0}\' while {2} is expected.';
	public static readonly EXCEPTION_PARSER_INVALIDCHILDTYPESOFNODE: string = 'An invalid type of children nodes \'{1}\' of node \'{0}\' while \'{2}\' is expected.';
	public static readonly EXCEPTION_PARSER_MISSING_OPERATOR: string = 'Missing operator between two or more expressions.';
	public static readonly EXCEPTION_PARSER_OPREQUIRESOPERAND: string = 'A \'{0}\' operator requires an operand.';
	public static readonly EXCEPTION_PARSER_OPREQUIRESSECONDOPERAND: string = 'A \'{0}\' operator requires a second operand.';
	public static readonly EXCEPTION_PARSER_TERNARYOPREQOPERAND: string = 'A ternary operation requires three parameters.';
	public static readonly EXCEPTION_PARSER_TYPENAMEEXPECTED: string = 'A type name is expected.';
	public static readonly EXCEPTION_PARSER_UNARYOPREQOPERAND: string = 'An unary operation requires one parameter.';
	public static readonly EXCEPTION_PARSER_UNEXPECTEDTOKEN: string = 'Unexpected token \'{0}\' in current context.';
	public static readonly EXCEPTION_PARSER_UNEXPECTEDTOKENTYPE: string = 'Unexpected token type \'{0}\'.';
	public static readonly EXCEPTION_PARSER_UNEXPECTEDTOKENWHILEBUILDINGTREE: string = 'Unexpected parser node met \'{0}\' while building expression tree.';
	public static readonly EXCEPTION_PARSER_UNEXPECTEDTOKENWHILEOTHEREXPECTED: string = 'A one of these \'{0}\' tokens are expected.';
	public static readonly EXCEPTION_STRINGUTILS_UNEXPECTEDESCAPESEQ: string = 'Unknown escape sequence \'{0}\'.';
	public static readonly EXCEPTION_TOKENIZER_INVALIDCHARLITERAL: string = 'Invalid char literal.';
	public static readonly EXCEPTION_TOKENIZER_UNEXPECTEDSYMBOL: string = 'Unexpected symbol \'{0}\'.';
	public static readonly EXCEPTION_UNBOUNDEXPR_DUPLICATEPARAMNAME: string = 'Duplicate parameter name \'{0}\'.';
	public static readonly EXCEPTION_UNBOUNDEXPR_INVALIDPARAMCOUNT: string = 'Invalid parameters count.';
	public static readonly EXCEPTION_UNBOUNDEXPR_TYPESDOESNTMATCHNAMES: string = 'Length of types array doesn\'t match length of names array.';
}

